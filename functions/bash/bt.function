function bt (){
    if [[ ! -f /usr/share/pixmaps/BT-DONE.svg ]] ;then
        echo '<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" version="1"><path d="M4 1.5c-.554 0-1 .446-1 1v18c0 .554.446 1 1 1h14c.554 0 1-.446 1-1v-13L13.5 7 13 1.5z" opacity=".2"/><path d="M4 1c-.554 0-1 .446-1 1v18c0 .554.446 1 1 1h14c.554 0 1-.446 1-1V7l-5.5-.5L13 1z" fill="#f90"/><path d="M4 1c-.554 0-1 .446-1 1v.5c0-.554.446-1 1-1h9L18.5 7h.5l-6-6z" opacity=".2" fill="#fff"/><path d="M13 1.5v5a1 1 0 001 1h5z" opacity=".2"/><path d="M13 1v5a1 1 0 001 1h5z" fill="#214b7d"/><path d="M12.5 10.5a3.5 3.5 0 100 7H19v-1h-6.5a2.5 2.5 0 111-4.79v-1.06a3.5 3.5 0 00-1-.15z" opacity=".2"/><path d="M12.5 10a3.5 3.5 0 100 7H19v-1h-6.5a2.5 2.5 0 111-4.79v-1.06a3.5 3.5 0 00-1-.15z" fill="#214b7d"/><path d="M12.5 8.5a5.497 5.497 0 00-.1 10.994v.006H19v-1h-6.5a4.5 4.5 0 010-9c.167.001.334.012.5.031V8.527a5.5 5.5 0 00-.5-.027z" opacity=".2"/><path d="M12.5 8a5.497 5.497 0 00-.1 10.994V19H19v-1h-6.5a4.5 4.5 0 010-9c.167.001.334.012.5.031V8.027A5.5 5.5 0 0012.5 8z" fill="#214b7d"/><path d="M12.5 12.5a1.5 1.5 0 000 3H19v-1h-6.5a.5.5 0 010-1h1.408c-.206-.581-.756-1-1.408-1z" opacity=".2"/><path d="M12.5 12a1.5 1.5 0 000 3H19v-1h-6.5a.5.5 0 010-1h1.408c-.206-.581-.756-1-1.408-1z" fill="#214b7d"/></svg>' >"/tmp/BT-DONE.svg"
        doas mv "/tmp/BT-DONE.svg" -t /usr/share/pixmaps
    fi
    #function FUNC_CKBTCOMP (){
    #    cd "$(pwd)"
    #    local PICDIR="$HOME/dotfiles/icons/NjZbh"
    #    local PIC="$(ls -1A "$PICDIR" |sort -R |sed -n '1p')"
    #    local TIME1 ;local TIME2
    #    if [[ "$(ls -1A ./*.torrent_done |grep -c torrent_done$)" -gt 0 ]] ;then
    #        for i in *.torrent_done ;do
    #            TIME1=$(date '+%s')
    #            aria2c "$i" -d "$(dirname "$i")" && TIME2=$(date '+%s')
    #            if [[ $((TIME2-TIME1)) -le 60 ]] ;then
    #                mv -b "$i" "${i}_verified"
    #                PICDIR="$HOME/dotfiles/icons/NjZbh"
    #                PIC="$(ls -1A "$PICDIR" |sort -R |sed -n '1p')"
    #                gio set -t string "${i}_verified" metadata::custom-icon "file://${PICDIR}/${PIC}"
    #            fi
    #        done
    #    fi
    #}

    function FUNC_ARIA (){
        /usr/bin/aria2c "$1" &&
        /usr/bin/aria2c "$1" &&
        mv "$1" "${1}_done"
        gio set -t string "${1}_done" metadata::custom-icon "file:///usr/share/pixmaps/BT-DONE.svg"
    }
    export -f FUNC_ARIA

    local DIR="$(pwd)"
    cd "$DIR"
    mkdir -p ./done
    echo "##########  $DIR  ##########"
    case $# in
        0)  if [[ "$(ls -1A ./ |grep -ci torrent$)" -gt 0 ]] ;then
                ls -1A ./*.torrent |sort -R |xargs -P3 -I{} bash -c 'FUNC_ARIA "{}"'
            else
                xsel -bo |xargs -P2 -I{} bash -c 'aria2c --follow-torrent=false "{}"'
                ls -1A ./*.torrent |sort -R |xargs -P3 -I{} bash -c 'FUNC_ARIA "{}"'
            fi
        ;;
        *)  local TT="$(mktemp)"
            until [[ "$1" = "" ]] ;do
                if [[ -f "$1" ]] ;then
                    echo "$(realpath "$1")"
                else
                    echo "$1"
                fi
                shift
            done >"$TT"
            cat "$TT" |xargs -P3 -I{} bash -c 'FUNC_ARIA "{}"'
            rm "$TT"
        ;;
    esac
    echo "##########  $DIR  ##########"

    local PIC_DIR="$HOME/pic/1500x"
    local YAD_HEADER="/tmp/.userhidden/HEADER-750-$(uuidgen).jpg"
    convert "$(ls -1A "$PIC_DIR"/*.jpg |sort -R |head -n1)" \
            -resize 750x -quality 100 "$YAD_HEADER"

    yad --title="BT finished at \"$(pwd)\"." \
        --image="$YAD_HEADER" --image-on-top \
        --buttons-layout=spread \
        --button='Close This Window:0' \
        --button='Open BT folder:99'
        #--button='Open folder and Verify downloads:55' \

    case "$?" in
        99)
            if ( type nautilus &>/dev/null ) ;then
                nohup nautilus -w "$DIR" &>/dev/null &
            else
                nohup xdg-open "$DIR" &>/dev/null &
            fi
            ;;
        *)  exit 100
            ;;
    esac
    /usr/bin/rm "$YAD_HEADER"
    return 0
}

